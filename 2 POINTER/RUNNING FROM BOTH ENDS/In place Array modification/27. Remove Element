// class Solution {
// public:
//     int removeElement(vector<int>& nums, int val) {
//         int k;
//         int m  =nums.size();
//         for(int i=0;i<m;i++){
           
//             if(nums[i]==val){
//                 nums.erase(remove(nums.begin(), nums.end(), val), nums.end());

//              k=nums.size();
               

//             }
//             return k;
            

//         }
//    return 0;
//  }
 
// };
class Solution {
 public:
int removeElement(vector<int>& nums, int val) {
    int i = 0;  // slow pointer

    for (int j = 0; j < nums.size(); j++) {  // fast pointer
        if (nums[j] != val) {
            nums[i] = nums[j];  // overwrite val with a valid number
            i++;
        }
    }

    return i;  // new length
}
};
