class Solution {
public:
   
        vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> mp; // Stores number and its index
        
        for (int i = 0; i < nums.size(); i++) {
            int complement = target - nums[i]; // Find the complement
            
            // Check if the complement exists in the map
            if (mp.find(complement) != mp.end()) {
                return {mp[complement], i}; // Return indices of the two numbers
            }
            
            // Add the current number and its index to the map
            mp[nums[i]] = i;
        }
        
        return {}; // Return empty vector if no solution is found
    }
};
 












    
      
    
