class Solution {
public:
 vector<vector<int>> res;
 void backtrack(vector<int>& nums,vector<int> &path , int i) {
        if ( i== nums.size()) {
            res.push_back(path);
            return;
        }

        
           // 1. include nums[i]
        path.push_back(nums[i]);
        backtrack(nums, path, i + 1);
        path.pop_back();

        // 2. exclude nums[i]
        backtrack(nums, path, i + 1);
    }

    vector<vector<int>> subsets(vector<int>& nums) {
         vector<int> path;
        backtrack(nums, path,0);
        return res;
    }
};
